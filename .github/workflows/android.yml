name: Android CI

on:
  push:
    branches:
      - master
      - dev

    tags:
      - 'v*'

  pull_request:
    branches: 
      - master
      - dev   

jobs:
  build:
    name: Build Apk
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Setup JDK
      uses: actions/setup-java@v2
      with:
        java-version: '14'
        distribution: 'adopt'
        cache: gradle

    - name: Build Apk with Gradle
      id: build
      run: |
        pwd
        echo -e "\n gradlew assembleRelease \n"
        chmod a+x gradlew
        ./gradlew assembleRelease

    - name: Get Time
      id: time
      uses: JantHsueh/get-time-action@master
      with:
        timeZone: 8

    - name: Get Apk Info
      id: apkInfo
      uses: JantHsueh/get-apk-info-action@master
      with:
        apkPath: ./build/app/outputs/apk/release/*.apk

    - name: Get git log
      id: gitLog
      uses: JantHsueh/get-git-log-action@master
      with:
        tag: release

    - name: Upload Apk
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: apk
        path: ${{github.workspace}}/build/app/outputs/apk/release/*.apk
      run: |
        echo -e "\n Upload Apk and show path \n"
        ls -l
        pwd

  release:
    name: Release APK
    needs: build
    runs-on: ubuntu-latest
    steps:

    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v5.1
       
    - name: Print branch    
      run: |
        echo "Running on default: ${{ steps.branch-name.outputs.current_branch }}"

    - name: Download APK from build
      uses: actions/download-artifact@v2
      with:
        name: apk
      run: |
        echo -e "\n Download APK and show path \n"
        ls -l
        pwd

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: ${{ github.event.repository.name }}  ${{ steps.branch-name.outputs.current_branch }} v${{ github.run_number }}.${{ github.run_attempt }}

    - name: Upload Release APK
      id: upload_release_asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: apk/*.apk
        asset_name: ${{ github.event.repository.name }}  ${{ steps.branch-name.outputs.current_branch }} v${{ github.run_number }}.${{ github.run_attempt }}.apk
        asset_content_type: application/zip
      run: |
        echo -e "\n Upload Release APK and show path \n"
        ls -l
        pwd

